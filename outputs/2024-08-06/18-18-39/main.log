[2024-08-06 18:18:40,127][flwr][INFO] - Starting Flower simulation, config: num_rounds=10, no round_timeout
[2024-08-06 18:18:47,663][flwr][INFO] - Flower VCE: Ray initialized with resources: {'CPU': 16.0, 'object_store_memory': 686014464.0, 'node:127.0.0.1': 1.0, 'node:__internal_head__': 1.0, 'memory': 1372028928.0}
[2024-08-06 18:18:47,664][flwr][INFO] - Optimize your simulation with Flower VCE: https://flower.ai/docs/framework/how-to-run-simulations.html
[2024-08-06 18:18:47,665][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 2, 'num_gpus': 0}
[2024-08-06 18:18:47,691][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 8 actors
[2024-08-06 18:18:47,693][flwr][INFO] - [INIT]
[2024-08-06 18:18:47,695][flwr][INFO] - Requesting initial parameters from one random client
[2024-08-06 18:18:54,342][flwr][INFO] - Received initial parameters from one random client
[2024-08-06 18:18:54,343][flwr][INFO] - Evaluating initial global parameters
[2024-08-06 18:18:54,357][flwr][ERROR] - Error(s) in loading state_dict for MLP:
	Missing key(s) in state_dict: "fc2.weight", "fc2.bias", "fc3.weight", "fc3.bias". 
	size mismatch for fc1.weight: copying a param with shape torch.Size([10, 784]) from checkpoint, the shape in current model is torch.Size([128, 784]).
	size mismatch for fc1.bias: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([128]).
[2024-08-06 18:18:54,402][flwr][ERROR] - Traceback (most recent call last):
  File "C:\Users\bharg\OneDrive\Documents\GitHub\federated-ml\.conda\Lib\site-packages\flwr\simulation\app.py", line 339, in start_simulation
    hist = run_fl(
           ^^^^^^^
  File "C:\Users\bharg\OneDrive\Documents\GitHub\federated-ml\.conda\Lib\site-packages\flwr\server\server.py", line 490, in run_fl
    hist, elapsed_time = server.fit(
                         ^^^^^^^^^^^
  File "C:\Users\bharg\OneDrive\Documents\GitHub\federated-ml\.conda\Lib\site-packages\flwr\server\server.py", line 95, in fit
    res = self.strategy.evaluate(0, parameters=self.parameters)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\bharg\OneDrive\Documents\GitHub\federated-ml\.conda\Lib\site-packages\flwr\server\strategy\fedavg.py", line 167, in evaluate
    eval_res = self.evaluate_fn(server_round, parameters_ndarrays, {})
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\bharg\OneDrive\Documents\GitHub\ProfStampFederatedLearning\server.py", line 61, in evaluate_fn_mlp
    model.load_state_dict(state_dict, strict=True)
  File "C:\Users\bharg\OneDrive\Documents\GitHub\federated-ml\.conda\Lib\site-packages\torch\nn\modules\module.py", line 2215, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for MLP:
	Missing key(s) in state_dict: "fc2.weight", "fc2.bias", "fc3.weight", "fc3.bias". 
	size mismatch for fc1.weight: copying a param with shape torch.Size([10, 784]) from checkpoint, the shape in current model is torch.Size([128, 784]).
	size mismatch for fc1.bias: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([128]).

[2024-08-06 18:18:54,406][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons. The most common are: 
	 > Sometimes, issues in the simulation code itself can cause crashes. It's always a good idea to double-check your code for any potential bugs or inconsistencies that might be contributing to the problem. For example: 
		 - You might be using a class attribute in your clients that hasn't been defined.
		 - There could be an incorrect method call to a 3rd party library (e.g., PyTorch).
		 - The return types of methods in your clients/strategies might be incorrect.
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 2, 'num_gpus': 0} is not enough for your run). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 2, 'num_gpus': 0}.
Take a look at the Flower simulation examples for guidance <https://flower.ai/docs/framework/how-to-run-simulations.html>.
